/*
 * This is the parent class of all other 'screens'.
 *
 * Original @author D. Green.
 *
 * © D. Green. 2021.
 */

 // INCLUDES
#include "Screen.h"

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Screen::Screen()
{

}

// CONSTRUCTOR / DESTRUCTOR
Screen::Screen(sf::RenderWindow* hwnd, Input* in, GameState* gs)
{
	window = hwnd;
	input = in;
	gameState = gs;
}

Screen::~Screen()
{
	//std::cout << "Screen object destroyed!\n";
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// FUNCTIONS
void Screen::handleInput(float dt)
{

}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void Screen::update(float dt)
{

}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void Screen::render()
{
	beginDraw();

	endDraw();
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void Screen::beginDraw()
{
	window->clear(sf::Color(255, 0, 0));
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void Screen::endDraw()
{
	window->display();
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

State Screen::getGameState()
{
	return gameState->getCurrentState();
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void Screen::setGameState(State s)
{
	gameState->setCurrentState(s);
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////